<?php


namespace App\Tests\Unit;



use App\services\ScheduleService;

class ScheduleServiceTest extends \PHPUnit\Framework\TestCase
{
    public function testRemoveHolidays()
    {
        $scheduleService = new ScheduleService();
        $dates = $scheduleService->removeHolidays('2021-01-01', '2021-01-12', ['2021-01-01','2021-01-02','2021-01-04','2021-01-05','2021-01-06','2021-01-07','2021-01-08','2021-01-09','2021-02-22','2021-02-23','2021-02-24','2021-03-08','2021-03-09','2021-05-01','2021-05-02','2021-05-03','2021-05-04','2021-05-05','2021-05-06','2021-05-07','2021-05-08','2021-05-09','2021-05-10','2021-05-11','2021-06-12','2021-06-13','2021-06-14','2021-06-15','2021-09-01','2021-09-02','2021-10-05','2021-10-06','2021-10-30','2021-10-31','2021-11-01','2021-11-02','2021-11-03','2021-11-04','2021-11-05','2021-11-06','2021-11-07','2021-11-08','2021-12-31','2022-01-01','2022-01-02','2022-01-03','2022-01-04','2022-01-05','2022-01-06','2022-01-07','2022-01-08','2022-01-09','2022-01-10','2022-02-23','2022-02-24','2022-03-07','2022-03-08','2022-03-09','2022-05-01','2022-05-02','2022-05-03','2022-05-04','2022-05-09','2022-05-10','2022-05-11','2022-06-12','2022-06-13','2022-06-14','2022-09-01','2022-09-02','2022-10-05','2022-10-06','2022-11-04','2022-11-05','2023-01-01','2023-01-02','2023-01-03','2023-01-04','2023-01-05','2023-01-06','2023-01-07','2023-01-08','2023-02-23','2023-02-24','2023-03-08','2023-03-09','2023-05-01','2023-05-02','2023-05-09','2023-05-10','2023-06-12','2023-06-13','2023-09-01','2023-09-02','2023-10-05','2023-10-06','2023-11-04','2023-11-05','2023-11-06','2023-11-07']);
        $this->assertEquals(['2021-01-03', '2021-01-10', '2021-01-11', '2021-01-12'], $dates);
    }

    public function testGetHolidays()
    {
        $scheduleService = new ScheduleService();
        $dates = $scheduleService->getHolidays('2021-01-01', '2021-01-12', ['2021-01-01','2021-01-02','2021-01-04','2021-01-05','2021-01-06','2021-01-07','2021-01-08','2021-01-09','2021-02-22','2021-02-23','2021-02-24','2021-03-08','2021-03-09','2021-05-01','2021-05-02','2021-05-03','2021-05-04','2021-05-05','2021-05-06','2021-05-07','2021-05-08','2021-05-09','2021-05-10','2021-05-11','2021-06-12','2021-06-13','2021-06-14','2021-06-15','2021-09-01','2021-09-02','2021-10-05','2021-10-06','2021-10-30','2021-10-31','2021-11-01','2021-11-02','2021-11-03','2021-11-04','2021-11-05','2021-11-06','2021-11-07','2021-11-08','2021-12-31','2022-01-01','2022-01-02','2022-01-03','2022-01-04','2022-01-05','2022-01-06','2022-01-07','2022-01-08','2022-01-09','2022-01-10','2022-02-23','2022-02-24','2022-03-07','2022-03-08','2022-03-09','2022-05-01','2022-05-02','2022-05-03','2022-05-04','2022-05-09','2022-05-10','2022-05-11','2022-06-12','2022-06-13','2022-06-14','2022-09-01','2022-09-02','2022-10-05','2022-10-06','2022-11-04','2022-11-05','2023-01-01','2023-01-02','2023-01-03','2023-01-04','2023-01-05','2023-01-06','2023-01-07','2023-01-08','2023-02-23','2023-02-24','2023-03-08','2023-03-09','2023-05-01','2023-05-02','2023-05-09','2023-05-10','2023-06-12','2023-06-13','2023-09-01','2023-09-02','2023-10-05','2023-10-06','2023-11-04','2023-11-05','2023-11-06','2023-11-07']);
        $this->assertEquals(['2021-01-01', '2021-01-02', '2021-01-04', '2021-01-05', '2021-01-06', '2021-01-07', '2021-01-08', '2021-01-09'], $dates);
    }

    public function testkrSortArr()
    {
        $scheduleService = new ScheduleService();
        $data = $scheduleService->krSort([
            0 => ['end' => '13:00', 'start' => '10:00'],
            1 => ['end' => '19:00', 'start' => '14:00']
         ]);
        $this->assertEquals([
                0 => ['start' => '10:00', 'end' => '13:00'],
                1 => ['start' => '14:00', 'end' => '19:00']
            ],$data
        );
    }

    public function testSortInnerArrays()
    {
        $scheduleService = new ScheduleService();
        $data = $scheduleService->sortInnerArrays([
            0 => ['start' => '10:00', 'end' => '13:00'],
            1 => ['start' => '08:00', 'end' => '09:00'],
            2 => ['start' => '17:00', 'end' => '19:00'],
            3 => ['start' => '14:00', 'end' => '16:00']
        ]);
        $this->assertEquals([
            0 => ['start' => '08:00', 'end' => '09:00'],
            1 => ['start' => '10:00', 'end' => '13:00'],
            2 => ['start' => '14:00', 'end' => '16:00'],
            3 => ['start' => '17:00', 'end' => '19:00']
        ], $data);

    }
}